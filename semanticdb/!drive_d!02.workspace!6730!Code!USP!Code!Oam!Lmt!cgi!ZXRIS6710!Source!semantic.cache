;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("stdlib.h" include (:system-flag t) nil [469 488])
            ("stdio.h" include (:system-flag t) nil [490 508])
            ("sys/types.h" include (:system-flag t) nil [509 531])
            ("sys/stat.h" include (:system-flag t) nil [532 553])
            ("dirent.h" include (:system-flag t) nil [555 574])
            ("time.h" include (:system-flag t) nil [575 592])
            ("usp.h" include nil nil [593 609])
            ("LmtPub.h" include nil nil [610 629])
            ("g_LmtInputContent" variable
               (:typemodifiers ("extern")
                :type ("T_LmtInputContent" type (:type "class") nil nil))
                nil [631 682])
            ("s_tLmtDealFun" variable
               (:typemodifiers ("static")
                :default-value "{
	USP_LMT_LOGIN,
	{
		{0,Lmt_printLoginHtml},
        {1,Lmt_printLogin},
		{2,Lmt_printLogOut},
		{3,Lmt_printMainHtml},
        {4,LMT_PrintFixConfig}      
	}
}"
                :type ("T_FunRegister" type (:type "class") nil nil))
                nil [684 890])
            ("Lmt_checkLanding" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [892 923])
            ("Lmt_findUserNameAndPwd" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("pUserName" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [961 978])
                    ("pPassWord" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [978 994]))                  
                :type ("WORD32" type (:type "class") nil nil))
                nil [924 995])
            ("LMT_PASSWORD_FILE" variable (:constant-flag t) nil [1008 1025])
            ("LMT_CRYPT_SALT" variable (:constant-flag t) nil [1086 1100])
            ("LMT_USERNAME_LEN" variable (:constant-flag t) nil [1166 1182])
            ("tagT_CliPasswd" type
               (:members 
                  ( ("aucUserName" variable
                       (:dereference 1
                        :type ("BYTE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1247 1291])
                    ("aucPassword" variable
                       (:dereference 1
                        :type ("BYTE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1311 1355]))                  
                :type "struct")
                nil [1211 1407])
            ("T_LmtPasswd" type
               (:typedef ("tagT_CliPasswd" type (:type "struct") nil nil)
                :type "typedef")
                nil [1211 1407])
            ("main" function (:type "int") nil [1974 2043])
            ("Lmt_printLoginHtml" function (:type "void") nil [2419 2529])
            ("Lmt_printLogin" function (:type "void") nil [2912 3194])
            ("Lmt_printMainHtml" function (:type "void") nil [3597 3701])
            ("Lmt_printLogOut" function (:type "void") nil [4077 4345])
            ("Lmt_checkLanding" function
               (:typemodifiers ("static")
                :type "void")
                nil [4753 5412])
            ("lmt_encrypt" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pucKey" variable
                       (:pointer 1
                        :type ("BYTE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5836 5849])
                    ("pucEncrypt" variable
                       (:pointer 1
                        :type ("BYTE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5850 5867]))                  
                :type ("VOID" type (:type "class") nil nil))
                nil [5812 6517])
            ("usp_Lmt_fileAtomicWrite" function
               (:arguments 
                  ( ("pucFileName" variable
                       (:pointer 1
                        :type ("BYTE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7020 7038])
                    ("pucBuf" variable
                       (:pointer 1
                        :type ("BYTE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7039 7052])
                    ("dwLen" variable (:type ("WORD32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7053 7066]))                  
                :type ("WORD32" type (:type "class") nil nil))
                nil [6989 7863])
            ("Lmt_findUserNameAndPwd" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pUserName" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [8305 8322])
                    ("pPassWord" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [8322 8338]))                  
                :type ("WORD32" type (:type "class") nil nil))
                nil [8268 9849])
            ("LMT_PrintFixConfig" function (:type "void") nil [10247 10945]))          
      :file "LmtLogin.c"
      :pointmax 10947
      :fsize 13494
      :lastmodtime '(22562 38264 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("LMT_USERNAME_LEN" . ((number "8" 1194 . 1195)))
          ("LMT_PASSWORD_FILE" . ((string "\"/mnt/app/etc/local.etc\"" 1036 . 1060)))
          ("LMT_CRYPT_SALT" . ((string "\"TJ\"" 1114 . 1118)))
          )
))
  :file "!drive_d!02.workspace!6730!Code!USP!Code!Oam!Lmt!cgi!ZXRIS6710!Source!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
